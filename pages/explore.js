import Head from "next/head";
import CommentModal from "../components/CommentModal";
import Sidebar from "../components/Sidebar";
import Widgets from "../components/Widgets";
import Posts from "../components/Posts";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { collection, query, onSnapshot, orderBy } from "firebase/firestore";
import { db } from "../firebase";
import { useSession } from "next-auth/react";
import ShareModal from "@/components/ShareModal";
import { HiSparkles } from "react-icons/hi";
import { AnimatePresence, motion } from "framer-motion";
import BottomBar from "@/components/BottomBar";
import MostViewed from "@/components/MostViewed";

export default function Home({ newsResults }) {
  const router = useRouter();
  const [posts, setPosts] = useState([]);
  const [trendingPosts, setTrendingPosts] = useState([]);
  const [bookmarks, setBookmarks] = useState([]);
  const [isRecommendation, setisRecommendation] = useState(true);
  const [isTrending, setisTrending] = useState(false);
  const { data: session } = useSession();

  useEffect(() => {
    onSnapshot(
      query(collection(db, "posts"), orderBy("timestamp", "desc")),
      (snapshot) => {
        snapshot.docs.map((docs) => {
          if (Math.random() > 0.5) {
            posts.push(docs);
          }
        });
        // setPosts(snapshot.docs);
      }
    );
  }, [db]);

  useEffect(() => {
    onSnapshot(
      query(collection(db, "posts"), orderBy("views", "desc")),
      (snapshot) => {
        setTrendingPosts(snapshot.docs);
      }
    );
  }, [db]);

  return (
    <>
      <Head>
        <title>Explore</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex min-h-screen  mx-auto ">
        {/* sidebar */}
        <Sidebar tab="Explore" />
        {/* posts */}
        <div className="xl:ml-[375px] border-l sm:border-r xl:min-w-[576px] sm:ml-[73px] flex-grow max-w-[40rem] border-gray-200">
          {/* which page  */}
          <div className="flex py-2 px-3 sticky top-0 z-50 bg-white border-b border-gray-200">
            <h2 className="text-lg sm:text-xl font-bold cursor-pointer">
              Explore
            </h2>
            <div className="text-green-800 hoverEffect items-center justify-center flex px-0 ml-auto w-9 h-9">
              <HiSparkles className="h-6" />
            </div>
          </div>
          {/* sections */}
          <div className="grid grid-cols-2 divide-x  border-b font-bold cursor-pointer sticky top-[52.5px] z-50 bg-white">
            <div
              className={`${
                isRecommendation && "bg-gray-400 "
              } text-center hover:bg-gray-200 pt-2 pb-2 pl-8 pr-8 font-normal`}
              onClick={() => {
                setisRecommendation(true);
                setisTrending(false);
              }}
            >
              Recommendation
            </div>
            <div
              className={`${
                isTrending && "bg-gray-400 "
              } text-center hover:bg-gray-200 pt-2 pb-2 pl-8 pr-8 font-normal`}
              onClick={() => {
                setisRecommendation(false);
                setisTrending(true);
              }}
            >
              Most Viewed
            </div>
          </div>

          {isRecommendation && (
            <AnimatePresence>
              {posts.map((post, index) => (
                <div key={index}>
                  {
                    <motion.div
                      key={post.id}
                      initial={{ opacity: 0 }}
                      animate={{ opacity: 1 }}
                      exit={{ opacity: 0 }}
                      transition={{ duration: 1 }}
                    >
                      <Posts id={post.id} post={post} />
                    </motion.div>
                  }
                </div>
              ))}
            </AnimatePresence>
          )}

          {isTrending && <MostViewed />}
        </div>
        {/* wigets */}
        <Widgets newsResults={newsResults.articles} />
        {/* modal */}
        <CommentModal />
        <ShareModal />
        {/* bottombar  */}
        <BottomBar tab="Explore" />
      </main>
    </>
  );
}

// https://saurav.tech/NewsAPI/top-headlines/category/health/in.json

export async function getServerSideProps() {
  const newsResults = await fetch(
    "https://saurav.tech/NewsAPI/top-headlines/category/general/in.json"
  ).then((res) => res.json());

  return {
    props: {
      newsResults: JSON.parse(JSON.stringify(newsResults)),
    },
  };
}
